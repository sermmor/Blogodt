#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon Dec  5 16:44:16 2011

import wx
import wx.lib.agw.hyperlink
import os
import blogger
import Vistas
import modelo
import VentanaTwitt

# begin wxGlade: extracode
# end wxGlade



class VistaAutentificacion(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: VistaAutentificacion.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.KEY_CODE_TAB_BUTTON = 9 # 9 es el código ascii de la tecla TAB.
        self.service = None
        self.listBlogs = []
        self.labelUser = wx.StaticText(self, -1, "  User:  ")
        self.textCtrlUser = wx.TextCtrl(self, -1, "")
        self.labelPass = wx.StaticText(self, -1, u"  Password:  ")
        self.textCtrlPass = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER|wx.TE_PASSWORD)
        self.buttonEnterUserPass = wx.Button(self, -1, "Log In")
        self.labelBlogPrincipal = wx.StaticText(self, -1, "  Choose principal blog:")
        self.listBoxBlogPrincipal = wx.ListBox(self, -1, choices=[], style=wx.LB_HSCROLL)
        self.buttonCancel = wx.Button(self, -1, "Enter offline")
        self.buttonUpdataOdt = wx.Button(self, -1, "Upload Odt/Html")
        self.buttonOk = wx.Button(self, -1, "Enter in another blog")

        self.__set_properties()
        self.__do_layout()
        self.buttonEnterUserPass.Bind(wx.EVT_BUTTON, self.enterInBlogger)
        self.Bind(wx.EVT_TEXT_ENTER, self.enterInBlogger, self.textCtrlPass)
        self.textCtrlUser.Bind(wx.EVT_KEY_DOWN, self.focusOnPass)
        self.buttonCancel.Bind(wx.EVT_BUTTON, self.enterOffline)
        self.buttonOk.Bind(wx.EVT_BUTTON, self.enterInMyBlog)
        self.buttonUpdataOdt.Bind(wx.EVT_BUTTON, self.updateBlogWithOdt)
        # Colocar el foco en la caja de introducir el nombre del usuario.
        self.textCtrlUser.SetFocus()
        # end wxGlade
    
    # Botones
    def focusOnPass(self, evento=None):
        keycode = evento.GetKeyCode()
        if (keycode == self.KEY_CODE_TAB_BUTTON):
            # Si se trata de la tecla tabulador, colocar el foco en el textbox de la contraseña.
            self.textCtrlPass.SetFocus()
        evento.Skip()
    
    def updateBlogWithOdt(self, evento=None):
        indexBlogPrincipal = self.listBoxBlogPrincipal.GetSelections()
        if (indexBlogPrincipal != ()) and (self.service != None):
            # 1 - Muestra una ventana para elegir el odt.
            dialogoCargar=wx.FileDialog(self, "Choose a file", os.path.realpath(""), "", "*.odt;*.html", wx.FD_OPEN)
            i=dialogoCargar.ShowModal()
            if i== wx.ID_OK:
                # Deshabilito todo botón para evitar posibles errores.
                self.setEnableAllButtons(False)
                rutaFichero = dialogoCargar.GetPath()
                # 2 - Cuando acepta se sube el odt al blog.
                sTitle = reduce((lambda str1, str2: str1 + " " + str2), rutaFichero.split("/")[-1].split(".")[:-1])
                blogPrincipal = self.listBlogs[int(indexBlogPrincipal[0])][0] #Obtenemos el id del blog en el que vamos a subir el post.
                try:
                    if (rutaFichero[-4:] == ".odt"):
                        self.updateOdtPost(rutaFichero, indexBlogPrincipal)
                    elif (rutaFichero[-5:] == ".html"):
                        self.updateHtmlPost(rutaFichero, indexBlogPrincipal)
                    
                    confirmationMessage = wx.MessageDialog(self, "Post save as a draft", style=wx.OK)
                    confirmationMessage.ShowModal()
                except:
                    errorMessage = wx.MessageDialog(self, "Error to upload post", style=wx.ICON_EXCLAMATION)
                    errorMessage.ShowModal()
                # 3 - Lanzar el explorador con el link al borrador subido al blog.
                # Para ello buscamos la primera entrada que no sea un borrador.
                downloader = modelo.DownloadBloggerToFileHTML()
                downloader.setConnection(self.service)
                links = downloader.getListPost(blogPrincipal, 1, True)
                idOfNewPost = str(links[0].GetEditLink().href).split("/")[-1] # Obtengo la id del post recién creado.
                abreLinks = wx.lib.agw.hyperlink.HyperLinkCtrl(self, wx.NewId())
                # http://www.blogger.com/blogger.g?blogID=<ID DEL BLOG>#editor/target=post;postID=<ID DEL POST ACTUAL>
                abreLinks.GotoURL("http://www.blogger.com/blogger.g?blogID=" + blogPrincipal + "#editor/target=post;postID=" + idOfNewPost, True, True)
                
                vistaVT = VentanaTwitt.VentanaTwitt(None, -1, "")
                vistaVT.setSugerenciaMsg(self.listBoxBlogPrincipal.GetString(indexBlogPrincipal[0]) +": "+ sTitle)
                vistaVT.Show()
                
                # Vuelvo a activar los botones.
                self.setEnableAllButtons(True)
    
    def enterOffline(self, evento=None):
        # 1 - Muestra una ventana para elegir la carpeta con los HTMLs.
        dialogoCargar=wx.DirDialog(self, "Choose a directory", defaultPath=os.path.realpath(""))
        i=dialogoCargar.ShowModal()
        if i == wx.ID_OK:
            # 2 - Mostramos la vista de htmls con los ficheros a mostrar en modo offline.
            ventanaPrincipal = Vistas.VistaVisorHTML(None, -1, "")
            ventanaPrincipal.activateOffline(dialogoCargar.GetPath())
            ventanaPrincipal.Show()
            self.Close()
    
    def enterInBlogger(self, evento=None):
        # Comprobar si los campos están rellenos, si no lo estan saltar una ventana de excepción.
        sUser = self.textCtrlUser.GetValue()
        sPass = self.textCtrlPass.GetValue()
        if (len(sUser) > 0) and (len(sPass) > 0):
            # Si el usuario no tiene el "@gmail.com" añadirselo.
            if (sUser.find("@") < 0):
                sUser = sUser + "@gmail.com"
            # Si la autentificación no ha ido bien soltará una excepción, lanzar una ventana de error en dicho caso.
            try:
                self.service = blogger.login(sUser, sPass)
                self.setListInListBox()
                # Colocar foco en la lista de blogs.
                self.listBoxBlogPrincipal.SetFocus()
            except:
                errorMessage = wx.MessageDialog(self, "User or pass incorrect", style=wx.ICON_EXCLAMATION)
                errorMessage.ShowModal()
        else:
            errorMessage = wx.MessageDialog(self, "User or pass is empty", style=wx.ICON_EXCLAMATION)
            errorMessage.ShowModal()
    
    def enterInMyBlog(self, evento=None):
        # Comprobar qué valores tiene cuando no hay nada seleccionado en los listBox
        indexBlogPrincipal = self.listBoxBlogPrincipal.GetSelections()
        if (indexBlogPrincipal != ()) and (self.service != None):
            ventanaPrincipal = Vistas.VistaVisorHTML(None, -1, "")
            ventanaPrincipal.setService(self.service)
            # Asignamos id del blog principal.
            blogPrincipal = self.listBlogs[int(indexBlogPrincipal[0])][0] # Obtenemos el id del blog principal.
            ventanaPrincipal.setIDBlogPrincipal(blogPrincipal)
            # Hacemos efectivos los sets en ventanaPrincipal
            ventanaPrincipal.reflesh()
            # Mostramos la ventana principal y cerramos la de autentificación.
            ventanaPrincipal.Show()
            self.Close()
    
    # Utilidades
    def updateOdtPost(self, rutaFichero, indexBlogPrincipal):
        uploader = modelo.UploadOdtFileToBlogger()
        uploader.setConnection(self.service)
        textToPosted = uploader.getStringHTMLOfODFDocument(rutaFichero, 'us-ascii')
        sTitle = reduce((lambda str1, str2: str1 + " " + str2), rutaFichero.split("/")[-1].split(".")[:-1])
        blogPrincipal = self.listBlogs[int(indexBlogPrincipal[0])][0] #Obtenemos el id del blog en el que vamos a subir el post.
        uploader.updateBloggerWithHTMLText(textToPosted, sTitle, blogPrincipal)
    
    def updateHtmlPost(self, rutaFichero, indexBlogPrincipal):
        uploader = modelo.UploadOdtFileToBlogger()
        uploader.setConnection(self.service)
        # Obtengo el texto en html a postear.
        fich = open(rutaFichero, 'Ur')
        textToPosted = fich.read()
        fich.close()
        sTitle = reduce((lambda str1, str2: str1 + " " + str2), rutaFichero.split("/")[-1].split(".")[:-1])
        blogPrincipal = self.listBlogs[int(indexBlogPrincipal[0])][0] #Obtenemos el id del blog en el que vamos a subir el post.
        uploader.updateBloggerWithHTMLTextNotOdtExport(textToPosted, sTitle, blogPrincipal)
    
    def setListInListBox(self):
        # Añadir a las listas los blogs del servicio. Guardar los pares blogid y title en self.listBlogs.
        index = 0
        self.listBlogs = []
        for blogid, title in blogger.getblogs(self.service):
            self.listBlogs = self.listBlogs + [[blogid, title]]
            self.listBoxBlogPrincipal.Insert(item=title, pos=index)
            index = index + 1
        
    def setEnableAllButtons(self, enable):
        self.buttonEnterUserPass.Enable(enable)
        self.buttonCancel.Enable(enable)
        self.buttonOk.Enable(enable)
        self.buttonUpdataOdt.Enable(enable)
    
    def __set_properties(self):
        # begin wxGlade: VistaAutentificacion.__set_properties
        self.SetTitle("Enter in Blogger lector")
        self.textCtrlUser.SetMinSize((180, 27))
        self.textCtrlPass.SetMinSize((180, 27))
        self.listBoxBlogPrincipal.SetMinSize((602, 103))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: VistaAutentificacion.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(4, 1, 0, 0)
        grid_sizer_3 = wx.FlexGridSizer(1, 5, 0, 0)
        grid_sizer_2 = wx.FlexGridSizer(1, 5, 0, 0)
        grid_sizer_2.Add(self.labelUser, 0, 0, 0)
        grid_sizer_2.Add(self.textCtrlUser, 0, 0, 0)
        grid_sizer_2.Add(self.labelPass, 0, 0, 0)
        grid_sizer_2.Add(self.textCtrlPass, 0, 0, 0)
        grid_sizer_2.Add(self.buttonEnterUserPass, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.labelBlogPrincipal, 0, 0, 0)
        grid_sizer_1.Add(self.listBoxBlogPrincipal, 0, 0, 0)
        grid_sizer_3.Add(self.buttonCancel, 0, 0, 0)
        grid_sizer_3.Add((155, 20), 0, 0, 0)
        grid_sizer_3.Add(self.buttonUpdataOdt, 0, 0, 0)
        grid_sizer_3.Add((155, 20), 0, 0, 0)
        grid_sizer_3.Add(self.buttonOk, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class VistaAutentificacion
