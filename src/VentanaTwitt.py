# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Thu Dec  8 15:07:30 2011

import os
import wx
import ModeloTwitt

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class VentanaTwitt(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: VentanaTwitt.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Constantes.
        self.TWITTER = "Twitter"
        self.ROJO = (255,0,0)
        self.AZUL = (0,0,255)
        
        # Objetos de la vista.
        self.lbKeyFile = wx.StaticText(self, -1, "  File with keys:  ")
        self.tcKeyFile = wx.TextCtrl(self, -1, "")
        self.btKeyFile = wx.Button(self, -1, "Browse...")
        self.lbSendMessageTo = wx.StaticText(self, -1, "  Send message:      ")
        self.cBSendMessageTo = wx.ComboBox(self, -1, choices=[self.TWITTER], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.tCMessage = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER|wx.TE_MULTILINE|wx.TE_AUTO_URL)
        self.lbUrl = wx.StaticText(self, -1, "  URL:                               ")
        self.tcBigURL = wx.TextCtrl(self, -1, "http://")
        self.btAcortarURL = wx.Button(self, -1, "Shorten")
        self.lbNumChars = wx.StaticText(self, -1, "0000" + (" "*153))
        self.lbNumChars.SetForegroundColour(self.AZUL)
        self.btSend = wx.Button(self, -1, "Send")

        self.__set_properties()
        self.__do_layout()
        
        # Variables.
        self.twitter = ModeloTwitt.Twitt()
        self.sugerenciaMsg = None
        
        self.allEnable(False)
        self.Bind(wx.EVT_BUTTON, self.examinarXMLKeys, self.btKeyFile)
        self.Bind(wx.EVT_TEXT_ENTER, self.enviarMensaje, self.tCMessage)
        self.Bind(wx.EVT_BUTTON, self.acortarURL, self.btAcortarURL)
        self.Bind(wx.EVT_BUTTON, self.enviarMensaje, self.btSend)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: VentanaTwitt.__set_properties
        self.SetTitle("Send message to social networks")
        self.tcKeyFile.SetMinSize((355, 27))
        self.cBSendMessageTo.SetMinSize((355, 29))
        self.cBSendMessageTo.SetSelection(0)
        self.tCMessage.SetMinSize((572, 92))
        self.tcBigURL.SetMinSize((355, 27))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: VentanaTwitt.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(5, 1, 0, 0)
        grid_sizer_5 = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_4 = wx.FlexGridSizer(1, 3, 0, 0)
        grid_sizer_3 = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_2 = wx.FlexGridSizer(1, 3, 0, 0)
        grid_sizer_2.Add(self.lbKeyFile, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.tcKeyFile, 0, 0, 0)
        grid_sizer_2.Add(self.btKeyFile, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_3.Add(self.lbSendMessageTo, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.cBSendMessageTo, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.tCMessage, 0, 0, 0)
        grid_sizer_4.Add(self.lbUrl, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.tcBigURL, 0, 0, 0)
        grid_sizer_4.Add(self.btAcortarURL, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_5.Add(self.lbNumChars, 0, 0, 0)
        grid_sizer_5.Add(self.btSend, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_5, 1, wx.EXPAND, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade
    
    # Eventos.
    def examinarXMLKeys(self, event):
        self.tcKeyFile.SetValue("")
        dialogoCargar=wx.FileDialog(self, "CHoose file xml", "", "", "*.xml", wx.FD_OPEN)
        i = dialogoCargar.ShowModal()
        if i == wx.ID_OK:
            pathXML = dialogoCargar.GetPath()
            self.tcKeyFile.SetValue(pathXML)
            if self.cBSendMessageTo.GetValue() == self.TWITTER:
                self.twitter.initTwitt(pathXML)
                if self.sugerenciaMsg != None:
                    self.twitter.setSugerenciaMsg(self.sugerenciaMsg)
                self.tCMessage.SetValue(self.twitter.getTextoPredefinido())
                self.refleshLbNumChars()
            self.allEnable(True)
            
    
    def enviarMensaje(self, event):
        self.refleshLbNumChars()
        if (self.cBSendMessageTo.GetValue() == self.TWITTER) and (self.getNumCaracteresQuedan() >= 0):
            self.twitter.enviarTuit(self.tCMessage.GetValue(), self.tcKeyFile.GetValue())
            self.tCMessage.SetValue("")
            self.Close()
    
    def acortarURL(self, event):
        self.tCMessage.AppendText(" " + self.twitter.acortarLink(self.tcBigURL.GetValue(), self.tcKeyFile.GetValue()))
        self.tcBigURL.SetValue("")
        self.refleshLbNumChars()
    
    # Utilidades.
    def setSugerenciaMsg(self, sTitle):
        self.sugerenciaMsg = sTitle
    
    def refleshLbNumChars(self):
        self.lbNumChars.SetLabel(self.cadenaNumeroCaracteres())
        if self.getNumCaracteresQuedan() >= 0:
            self.lbNumChars.SetForegroundColour(self.AZUL)
        else:
            self.lbNumChars.SetForegroundColour(self.ROJO)
        
    
    def getNumCaracteresQuedan(self):
        res = 0
        if (self.cBSendMessageTo.GetValue() == self.TWITTER):
            res = self.twitter.getLimitChars() - len(self.tCMessage.GetValue())
        return res
    
    def cadenaNumeroCaracteres(self):
        # cifras es un Int.
        numero = self.getNumCaracteresQuedan()
        res = ""
        if (numero < -999):
            # Cinco caracteres.
            res = str(abs(numero))
        elif (numero < -99):
            # Cuatro caracteres.
            res = "-0" + str(abs(numero))
        elif (numero < -9):
            # Tres caracteres.
            res = "-00" + str(abs(numero))
        elif (numero < 0):
            # Dos caracteres.
            res = "-000" + str(abs(numero))
        elif (numero > 100):
            # Tres caracteres.
            res = "0" + str(numero)
        elif (numero > 10):
            # Dos caracteres.
            res = "00" + str(numero)
        elif (numero >= 0):
            # Un caracter.
            res = "000" + str(numero)
        else:
            res = "0000"
        
        if (numero >= 0):
            res = res + (" "*153)
        else:
            res = res + (" "*152)
            
        return res
        
    def allEnable(self, b=True):
        self.cBSendMessageTo.Enable(b)
        self.tCMessage.Enable(b)
        self.tcBigURL.Enable(b)
        self.btAcortarURL.Enable(b)
        self.btSend.Enable(b)
        

# end of class VentanaTwitt


